personA <- c("Mark", "Mark", "Peter", "Peter", "Bob", "Jill")
personB <- c("Peter", "Jill", "Bob", "Aaron", "Jill", "Aaron")
edgelist <- as.data.frame(PersonA = personA, PersonB = personB)
personB
personA
edgelist <- data.frame(PersonA = personA, PersonB = personB)
edgelist <- data.frame(PersonA = personA, PersonB = personB, stringsAsFactors = F)
edgelist
View(edgelist)
print(edgelist)
matrix(c(0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0), dimnames = list(c("Mark", "Peter", "Bob", "Jill", "Aaron"), c("Mark", "Peter", "Bob", "Jill", "Aaron")))
?matrix
matrix(c(0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0), nrow = 5, ncol = 5, dimnames = list(c("Mark", "Peter", "Bob", "Jill", "Aaron"), c("Mark", "Peter", "Bob", "Jill", "Aaron")))
adjacency <- matrix(c(0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0), nrow = 5, ncol = 5, dimnames = list(c("Mark", "Peter", "Bob", "Jill", "Aaron"), c("Mark", "Peter", "Bob", "Jill", "Aaron")))
adjacency
print(adjacency)
table(edgelist)
attributes <- data.frame(ID = actorid, Name = actorname, Age = age, Gender = gender, Race = race, Country = country, stringsAsFactors = F)
actorid <- c(1:5)
actorname <- c("Mark", "Peter", "Jill", "Bob", "Aaron")
age <- c(23,40,20,77,13)
gender <- c("M", "M", "F", "M", "M")
race <- c("W", "B", "W", "A", "H")
country <- c("USA", "France", "South Africa", "Indonesia", "Bolivia")
attributes <- data.frame(ID = actorid, Name = actorname, Age = age, Gender = gender, Race = race, Country = country, stringsAsFactors = F)
attributes
?read.csv
countrysideEL <- read.csv("/Data/countrysideEL.csv", stringsAsFactors = FALSE)
countrysideEL <- read.csv("Data/countrysideEL.csv", stringsAsFactors = FALSE)
countrysideEL
countrysideEL <- read.csv(file = "Data/countrysideEL.csv", stringsAsFactors = FALSE)
# classEdge <- read.csv(file = file.choose(), stringsAsFactors = FALSE)
classEdge <- read.csv(file = file.choose(), stringsAsFactors = FALSE)
head(countrysideEL)
countrysideAtts <- read.csv("Data/countrysideAtts.csv", stringsAsFactors = F)
head(countrysideAtts)
classEdge <- as.matrix(classEdge)
class(classEdge)
classNetwork <- graph.edgelist(classEdge[,1:2], directed=TRUE)
library(igraph)
classNetwork <- graph.edgelist(classEdge[,1:2], directed=TRUE)
classNetwork
class(classNetwork)
classNetwork <- graph.edgelist(classEdge, directed=TRUE)
classNetwork
countrysideNetwork <- graph.edgelist(countrysideEL, directed=TRUE)
countrysideEL
countrysideEL <- as.matrix(countrysideEL)
countrysideNetwork <- graph.edgelist(countrysideEL, directed=TRUE)
countrysideNetwork
get.adjacency(countrysideNetwork)
countrysideAdj <- get.adjacency(countrysideNetwork)
write.csv(countrysideAdj, "countrysideAdj.csv")
countrysideAdj <- as.data.frame(get.adjacency(countrysideNetwork))
countrysideAdj <- as.data.frame(as.matrix(get.adjacency(countrysideNetwork)))
View(countrysideAdj)
colnames(countrysideAdj) <- rownames(countrysideAdj)
write.csv(countrysideAdj, "countrysideAdj.csv")
classAdj <- read.csv("countrysideAdj.csv", header = T) # Adjacency matrix data
classAdj <- read.csv("Data/countrysideAdj.csv", header = T) # Adjacency matrix data
View(classAdj)
?read.csv
countrysideAdj <- countrysideAdj[,-1]
countrysideAdj
View(countrysideAtts)
View(countrysideAdj)
colnames(countrysideAdj) <- 1:length(countrysideAdj)
countrysideAdj
colnames(countrysideAdj)
rownames(countrysideAdj)
countrysideAdj <- as.data.frame(as.matrix(get.adjacency(countrysideNetwork)))
View(countrysideAdj)
colnames(countrysideAdj) <- rownames(countrysideAdj)
countrysideAdj <- read.csv("Data/countrysideAdj.csv", header = T)
View(countrysideAdj)
countrysideAdj <- as.data.frame(as.matrix(get.adjacency(countrysideNetwork)))
View(countrysideAdj)
countrysideAdj <- read.csv("Data/countrysideAdj.csv")
View(countrysideAdj)
countrysideAdj <- read.csv("Data/countrysideAdj.csv", header = F)
View(countrysideAdj)
colnames(countrysideAdj) <- rownames(countrysideAdj)
View(countrysideAdj)
classAdj <- as.matrix(classAdj)
countrysideAdj <- as.matrix(countrysideAdj)
countrysideNetwork <- graph.adjacency(countrysideAdj, mode = "directed")
countrysideNetwork
V(countrysideNetwork)$name
V(countrysideNetwork)$name[1:5]
head(V(countrysideNetwork)$name)
V(countrysideNetwork)$name
plot(countrysideNetwork)
plot(countrysideNetwork)
V(countrysideNetwork)$name
?graph.data.frame
countrysideEL <- as.data.frame(countrysideEL)
countrysideEL
read.csv("Data/countrysideEL.csv")
countrysideEL <- read.csv("Data/countrysideEL.csv")
countrysideEL <- read.csv("Data/countrysideEL.csv", stringsAsFactors = F)
countrysideAtts <- read.csv("Data/countrysideAtts.csv", stringsAsFactors = F)
View(countrysideAtts)
countrysideEL <- read.csv("Data/countrysideEL.csv", stringsAsFactors = F)
countrysideAtts <- read.csv("Data/countrysideAtts.csv", stringsAsFactors = F)
countrysideNet <- graph_from_data_frame(countrysideAtts, directed = T, vertices = countrysideAtts)
countrysideAtts
View(countrysideAtts)
length(unique(countrsideAtts$name))
length(unique(countrysideAtts$name))
countrysideEL
countrysideNet <- graph_from_data_frame(countrysideAtts, directed = T, vertices = countrysideAtts)
names(countrysideNetwork)
V(countrysideNetwork)$name
countrysideAtts
countrysideAtts$name
class(countrysideAtts$name)
countrysideAtts$name <- as.character(countrysideAtts$name)
countrysideNet <- graph_from_data_frame(countrysideAtts, directed = T, vertices = countrysideAtts)
countrysideEL
length(countrysideEL$V1)
length(unique(countrysideEL$V1))
length(unique(countrysideEL$V2))
length(unique(c(countrysideEL$V2, countrysideEL$V1))
)
countrysideNet <- graph_from_data_frame(countrysideAtts, directed = T, vertices = countrysideAtts)
V(countrysideNet)$name
V(countrysideNetwork)$name
countrysideEL <- read.csv("Data/countrysideEL.csv", stringsAsFactors = F)
graph.edgelist(as.matrix(countrysideEL), stringsAsFactors = F)
graph.edgelist(as.matrix(countrysideEL), stringsAsFactors = F)
graph.edgelist(as.matrix(countrysideEL))
countrysideNet <- graph_from_data_frame(countrysideEL, directed = T, vertices = countrysideAtts)
countrysideNet
countrysideEL <- read.csv("Data/countrysideEL.csv", stringsAsFactors = F)
countrysideAtts <- read.csv("Data/countrysideAtts.csv", stringsAsFactors = F)
countrysideNet <- graph_from_data_frame(countrysideEL, directed = T, vertices = countrysideAtts)
countrysideNet
df <- countrysideAtts
df
df_nn <- df[,-"name"]
View(df)
df_nn <- subset(df, select = c(-"name"))
df_nn <- subset(df, select = c(-name))
var_names <- colnames(subset(df, select = c(-name)))
var_names
g <- countrysideNetwork
g
var_names
i = 1
var_names[i]
?set.vertex.attribute
V9graph
match(df$name, V(g)$name)
sort(df$sex)
sort(df)
df[order(df$sex),]
match(df[order(df$sex),]$name, V(g)$name)
df[order(df$sex),]$name
g <- set.vertex.attribute(g, var_names[i], index = match(df$name, V(g)$name), df[,"var_names"])
df[,"var_names"]
df
g <- set.vertex.attribute(g, var_names[i], index = match(df$name, V(g)$name), df[,var_names[i]])
g
V(g)$sex
V(g)$sex == df$sex
assign_atts <- function(g, df){
var_names <- colnames(subset(df, select = c(-name)))
for ( i in var_names){
g <- set.vertex.attribute(g, var_names[i], index = match(df$name, V(g)$name), df[,var_names[i]])
}
return(g)
}
assign_atts(countrysideNet, countrysideAtts)
g
g
g <- countrysideNetwork
g <- countrysideAtts
assign_atts(countrysideNetwork, countrysideAtts)
Q
Q
Q
Q
Q
Q
assign_atts <- function(g, df){
var_names <- colnames(subset(df, select = c(-name)))
for ( i in 1:length(var_names)){
g <- set.vertex.attribute(g, var_names[i], index = match(df$name, V(g)$name), df[,var_names[i]])
}
return(g)
}
assign_atts(countrysideNetwork, countrysideAtts)
countrysideAdj <- read.csv("Data/countrysideAdj.csv", stringsAsFactors = F)
countrysideAdj <- read.csv("Data/countrysideAdj.csv", header = F)
colnames(countrysideAdj) <- rownames(countrysideAdj)
countrysideAdj <- as.matrix(countrysideAdj)
countrysideNetwork <- graph.adjacency(countrysideAdj, mode = "directed")
countrysideNetwork <- assign_atts(countrysideNetwork, countrysideAtts)
countrysideNetwork
countrysideAdj <- read.csv("Data/countrysideAdj.csv", header = F)
colnames(countrysideAdj) <- rownames(countrysideAdj)
countrysideAdj <- as.matrix(countrysideAdj)
countrysideAdj <- countrysideAdj[1:100, 1:100]
countrysideNetwork <- graph.adjacency(countrysideAdj, mode = "directed")
countrysideNetwork <- assign_atts(countrysideNetwork, countrysideAtts)
g <- countrysideNetwork
g
df <- countrysideAtts
var_names <- colnames(subset(df, select = c(-name)))
var_names
df$name
match(df$name, V(g)$name)
match(V(g)$name, df$name)
i
g <- set.vertex.attribute(g, var_names[i], index = match(V(g)$name, df$name), df[,var_names[i]])
match(V(g)$name, df$name)
g <- set.vertex.attribute(g, var_names[i], index = temp_index, df[temp_index,var_names[i]])
temp_index <- match(V(g)$name, df$name)
g <- set.vertex.attribute(g, var_names[i], index = temp_index, df[temp_index,var_names[i]])
g
g(sex)
assign_atts <- function(g, df){
var_names <- colnames(subset(df, select = c(-name)))
temp_index <- match(V(g)$name, df$name)
for ( i in 1:length(var_names)){
g <- set.vertex.attribute(g, var_names[i], index = temp_index, df[temp_index,var_names[i]])
}
return(g)
}
countrysideNetwork <- assign_atts(countrysideNetwork, countrysideAtts)
countrysideNetwork
V(countrysideNetwork)$sex
countrysideAtts <- countrysideAtts[,order(countrysideAtts$sex)]
countrysideAtts <- countrysideAtts[order(countrysideAtts$sex),]
View(countrysideAtts)
countrysideNetwork <- assign_atts(countrysideNetwork, countrysideAtts)
V(countrysideNetwork)$sex
countrysideNetwork <- assign_atts(countrysideNetwork, countrysideAtts)
countrysideNetwork
countrysideNetwork
V(countrysideNetwork)$nonwhite <- ifelse(V(countrysideNetwork)$race == 2 | V(classNetwork)$Race == 3, 1, 0)
V(countrysideNetwork)$nonwhite
V(countrysideNetwork)$race
countrysideEL <- read.csv("Data/countrysideEL.csv", stringsAsFactors = F)
countrysideAdj <- read.csv("Data/countrysideAdj.csv", header = F)
colnames(countrysideAdj) <- rownames(countrysideAdj)
countrysideAdj <- as.matrix(countrysideAdj)
countrysideNetwork <- graph.adjacency(countrysideAdj, mode = "directed")
countrysideNetwork <- assign_atts(countrysideNetwork, countrysideAtts)
countrysideNetwork
V(countrysideNetwork)$race
V(countrysideNetwork)$nonwhite <- ifelse(V(countrysideNetwork)$race == 2 | V(classNetwork)$race == 3, 1, 0)
V(countrysideNetwork)$nonwhite
V(countrysideNetwork)$race == 2
V(countrysideNetwork)$nonwhite <- ifelse(V(countrysideNetwork)$race == 2 | V(countrysideNetwork)$race == 3, 1, 0)
V(countrysideNetwork)$nonwhite
V(countrysideNetwork)$grade2 <- V(countrysideNetwork)$grade2^2
plot(countrysideNetwork)
plot(countrysideNetwork, vertex.size = 2)
plot(countrysideNetwork, vertex.size = 4)
plot(countrysideNetwork, vertex.size = 4, vertex.color = "tomato", vertex.frame.color = NA)
plot(countrysideNetwork, vertex.size = 4, vertex.color = "tomato", vertex.frame.color = NA, vertex.label.cex = .5, vertex.label.color = "black")
plot(countrysideNetwork, vertex.size = 2, vertex.color = "seagreen", vertex.frame.color = NA, vertex.label.cex = .7, vertex.label.color = "black", edge.curved = .1, edge.arrow.size = .1)
plot(countrysideNetwork, vertex.size = 4, vertex.color = "tomato", vertex.frame.color = NA, vertex.label = NA)
plot(countrysideNetwork, vertex.size = 4, vertex.color = "tomato", vertex.frame.color = NA, vertex.label.cex = .7,  vertex.label = NA, edge.curved = .1, edge.arrow.size = .1)
source("Useful R Functions/giantComponentFunction.r")
source("Useful R Functions/assign_atts.r")
source("Useful R Functions/giant_component.R")
source("Useful R Functions/giant_component.R")
countrysideNetwork <- giant_component(countrysideNetwork)
plot(countrysideNetwork, vertex.size = 4, vertex.color = "tomato", vertex.frame.color = NA, vertex.label.cex = .7,  vertex.label = NA, edge.curved = .1, edge.arrow.size = .1)
plot(countrysideNetwork, vertex.size = 4, vertex.color = "tomato", vertex.frame.color = NA, vertex.label.cex = .7,  vertex.label = NA, edge.curved = .1, edge.arrow.size = .1, layout = layout.kamada.kawai)
plot(countrysideNetwork, vertex.size = 4, vertex.color = "tomato", vertex.frame.color = NA, vertex.label.cex = .7,  vertex.label = NA, edge.curved = .1, edge.arrow.size = .1, layout = layout.fruchterman.reingold)
plot(countrysideNetwork, vertex.size = 3, vertex.color = "tomato", vertex.frame.color = NA, vertex.label.cex = .7,  vertex.label = NA, edge.curved = .1, edge.arrow.size = .1, layout = layout.fruchterman.reingold)
plot(countrysideNetwork, vertex.size = 3, vertex.color = "tomato", vertex.frame.color = NA, vertex.label.cex = .7,  vertex.label = NA, edge.curved = .1, edge.arrow.size = .1, layout = layout.kamada.kawai)
plot(countrysideNetwork, vertex.size = 3, vertex.color = "tomato", vertex.frame.color = NA, vertex.label.cex = .7,  vertex.label = NA, edge.curved = .1, edge.arrow.size = .1)
par(mar = c(0,0,0,0))
plot(countrysideNetwork, vertex.size = 3, vertex.color = "tomato", vertex.frame.color = NA, vertex.label.cex = .7,  vertex.label = NA, edge.curved = .1, edge.arrow.size = .1, layout = layout.kamada.kawai)
countrysideLayout <- layout.kamada.kawai(countrysideNetwork)
plot(countrysideNetwork, layout = countrysideLayout, vertex.size = 3, vertex.color = "tomato", vertex.frame.color = NA, vertex.label.cex = .7,  vertex.label = NA, edge.curved = .1, edge.arrow.size = .1)
?layout
?layout_
kamadaLayout <- layout.kamada.kawai(countrysideNetwork, kkconst = vcount(countrysideNetwork)*2)
plot(countrysideNetwork, layout = kamadaLayout, vertex.size = 3, vertex.color = "tomato", vertex.frame.color = NA, vertex.label.cex = .7,  vertex.label = NA, edge.curved = .1, edge.arrow.size = .1)
plot(countrysideNetwork, layout = kamadaLayout, vertex.size = 3, vertex.color = "tomato", vertex.frame.color = NA, vertex.label.cex = .7,  vertex.label = NA, edge.curved = .1, edge.arrow.size = .1)
kamadaLayout <- layout.kamada.kawai(countrysideNetwork, kkconst = vcount(countrysideNetwork)*10)
plot(countrysideNetwork, layout = kamadaLayout, vertex.size = 3, vertex.color = "tomato", vertex.frame.color = NA, vertex.label.cex = .7,  vertex.label = NA, edge.curved = .1, edge.arrow.size = .1)
kamadaLayout <- layout.kamada.kawai(countrysideNetwork, kkconst = vcount(countrysideNetwork)*100)
plot(countrysideNetwork, layout = kamadaLayout, vertex.size = 3, vertex.color = "tomato", vertex.frame.color = NA, vertex.label.cex = .7,  vertex.label = NA, edge.curved = .1, edge.arrow.size = .1)
kamadaLayout <- layout.kamada.kawai(countrysideNetwork, kkconst = vcount(countrysideNetwork)*.5)
plot(countrysideNetwork, layout = kamadaLayout, vertex.size = 3, vertex.color = "tomato", vertex.frame.color = NA, vertex.label.cex = .7,  vertex.label = NA, edge.curved = .1, edge.arrow.size = .1)
kamadaLayout <- layout.kamada.kawai(countrysideNetwork, kkconst = vcount(countrysideNetwork)*.1)
plot(countrysideNetwork, layout = kamadaLayout, vertex.size = 3, vertex.color = "tomato", vertex.frame.color = NA, vertex.label.cex = .7,  vertex.label = NA, edge.curved = .1, edge.arrow.size = .1)
kamadaLayout <- layout.kamada.kawai(countrysideNetwork)
plot(countrysideNetwork, layout = kamadaLayout, vertex.size = 2, vertex.color = "tomato", vertex.frame.color = NA, vertex.label.cex = .7,  vertex.label = NA, edge.curved = .1, edge.arrow.size = .1)
plot(countrysideNetwork, layout = kamadaLayout, vertex.size = 2, vertex.color = "tomato", vertex.frame.color = NA, vertex.label.cex = .7,  vertex.label = NA, edge.curved = .1, edge.arrow.size = .1, edge.width = .5)
plot(countrysideNetwork, layout = kamadaLayout, vertex.size = 2, vertex.color = "tomato", vertex.frame.color = NA, vertex.label.cex = .7,  vertex.label = NA, edge.curved = .1, edge.arrow.size = .1, edge.width = .3)
?ifelse
V(countrysideNetwork)$sex
V(countrysideNetwork)$color <- ifelse(V(countrysideNetwork)$sex == 1, "dodgerblue3","seagreen")
plot(countrysideNetwork, vertex.size = 2, vertex.color = V(countrysideNetwork)$color, vertex.frame.color = NA, vertex.label.cex = .7, vertex.label.color = "black", edge.curved = .1, edge.arrow.size = .1)
plot(countrysideNetwork, layout = fruchtermanLayout, vertex.size = nodeSize*10, vertex.color = V(countrysideNetwork)$color, vertex.frame.color = NA, vertex.label.cex = .7, vertex.label = NA, edge.curved = .1, edge.arrow.size = .1)
fruchtermanLayout <- layout.fruchterman.reingold(countrysideNetwork)
plot(countrysideNetwork, layout = fruchtermanLayout, vertex.size = nodeSize*10, vertex.color = V(countrysideNetwork)$color, vertex.frame.color = NA, vertex.label.cex = .7, vertex.label = NA, edge.curved = .1, edge.arrow.size = .1)
plot(countrysideNetwork, layout = fruchtermanLayout, vertex.size = 2, vertex.color = V(countrysideNetwork)$color, vertex.frame.color = NA, vertex.label.cex = .7, vertex.label = NA, edge.curved = .1, edge.arrow.size = .1)
V(countrysideNetwork)$sex
V(countrysideNetwork)$race
V(countrysideNetwork)$age
V(countrysideNetwork)$grade
V(countrysideNetwork)$color
countrysideEL <- read.csv("Data/countrysideEL.csv", stringsAsFactors = F)
countrysideAtts <- read.csv("Data/countrysideAtts.csv", stringsAsFactors = F)
countrysideNet <- graph_from_data_frame(countrysideEL, directed = T, vertices = countrysideAtts)
fruchtermanLayout <- layout.fruchterman.reingold(countrysideNetwork)
plot(countrysideNetwork, layout = fruchtermanLayout, vertex.size = 2, vertex.color = V(countrysideNetwork)$color, vertex.frame.color = NA, vertex.label.cex = .7, vertex.label = NA, edge.curved = .1, edge.arrow.size = .1)
countrysideEL <- read.csv("Data/countrysideEL.csv", stringsAsFactors = F)
countrysideAtts <- read.csv("Data/countrysideAtts.csv", stringsAsFactors = F)
countrysideNetwork <- graph_from_data_frame(countrysideEL, directed = T, vertices = countrysideAtts)
countrysideNetwork <- giant_component(countrysideNetwork)
plot(countrysideNetwork, vertex.size = 3, vertex.color = "tomato", vertex.frame.color = NA, vertex.label.cex = .7,  vertex.label = NA, edge.curved = .1, edge.arrow.size = .1, edge.width = .3)
fruchtermanLayout <- layout.fruchterman.reingold(countrysideNetwork)
plot(countrysideNetwork, layout = fruchtermanLayout, vertex.size = 2, vertex.color = V(countrysideNetwork)$color, vertex.frame.color = NA, vertex.label.cex = .7, vertex.label = NA, edge.curved = .1, edge.arrow.size = .1)
V(countrysideNetwork)$color <- ifelse(V(countrysideNetwork)$sex == 1, "dodgerblue3","seagreen")
plot(countrysideNetwork, layout = fruchtermanLayout, vertex.size = 2, vertex.color = V(countrysideNetwork)$color, vertex.frame.color = NA, vertex.label.cex = .7, vertex.label = NA, edge.curved = .1, edge.arrow.size = .1)
countrysideNetwork <- assign_atts(countrysideNetwork, countrysideAtts)
plot(countrysideNetwork, layout = fruchtermanLayout, vertex.size = 2, vertex.color = V(countrysideNetwork)$color, vertex.frame.color = NA, vertex.label.cex = .7, vertex.label = NA, edge.curved = .1, edge.arrow.size = .1)
V(countrysideNetwork)$color <- ifelse(V(countrysideNetwork)$sex == 1, "dodgerblue3","seagreen")
plot(countrysideNetwork, layout = fruchtermanLayout, vertex.size = 2, vertex.color = V(countrysideNetwork)$color, vertex.frame.color = NA, vertex.label.cex = .7, vertex.label = NA, edge.curved = .1, edge.arrow.size = .1)
var_names <- colnames(subset(df, select = c(-name)))
temp_index <- match(V(g)$name, df$name)
temp_index
g
countrysideAdj <- read.csv("Data/countrysideAdj.csv", header = F)
colnames(countrysideAdj) <- rownames(countrysideAdj)
countrysideAdj <- as.matrix(countrysideAdj)
countrysideNetwork <- graph.adjacency(countrysideAdj, mode = "directed")
countrysideNetwork <- assign_atts(countrysideNetwork, countrysideAtts)
fruchtermanLayout <- layout.fruchterman.reingold(countrysideNetwork)
plot(countrysideNetwork, layout = fruchtermanLayout, vertex.size = 2, vertex.color = V(countrysideNetwork)$color, vertex.frame.color = NA, vertex.label.cex = .7, vertex.label = NA, edge.curved = .1, edge.arrow.size = .1)
countrysideNetwork <- giant_component(countrysideNetwork)
V(countrysideNetwork)$color <- ifelse(V(countrysideNetwork)$sex == 1, "dodgerblue3","seagreen")
plot(countrysideNetwork, layout = fruchtermanLayout, vertex.size = 2, vertex.color = V(countrysideNetwork)$color, vertex.frame.color = NA, vertex.label.cex = .7, vertex.label = NA, edge.curved = .1, edge.arrow.size = .1)
countrysideEL <- read.csv("Data/countrysideEL.csv", stringsAsFactors = F)
countrysideAtts <- read.csv("Data/countrysideAtts.csv", stringsAsFactors = F)
countrysideNetwork <- graph_from_data_frame(countrysideEL, directed = T, vertices = countrysideAtts)
source("Useful R Functions/assign_atts.r")
countrysideNetwork <- assign_atts(countrysideNetwork, countrysideAtts)
countrysideNetwork <- giant_component(countrysideNetwork)
fruchtermanLayout <- layout.fruchterman.reingold(countrysideNetwork)
V(countrysideNetwork)$color <- ifelse(V(countrysideNetwork)$sex == 1, "dodgerblue3","seagreen")
plot(countrysideNetwork, layout = fruchtermanLayout, vertex.size = 2, vertex.color = V(countrysideNetwork)$color, vertex.frame.color = NA, vertex.label.cex = .7, vertex.label = NA, edge.curved = .1, edge.arrow.size = .1)
V(countrysideNetwork)$race
table(V(countrysideNetwork)$race)
V(countrysideNetwork)$color <- ifelse(V(countrysideNetwork)$race == 1, "tomato","dodgerblue3")
V(countrysideNetwork)$color <- ifelse(V(countrysideNetwork)$race == 2, "seagreen", V(countrysideNetwork)$color)
V(countrysideNetwork)$color <- NA
V(countrysideNetwork)$color <- ifelse(V(countrysideNetwork)$race == 1, "tomato","dodgerblue3")
V(countrysideNetwork)$color <- ifelse(V(countrysideNetwork)$race == 2, "seagreen", V(countrysideNetwork)$color)
plot(countrysideNetwork, layout = fruchtermanLayout, vertex.size = 2, vertex.color = V(countrysideNetwork)$color, vertex.frame.color = NA, vertex.label.cex = .7, vertex.label = NA, edge.curved = .1, edge.arrow.size = .1)
V(countrysideNetwork)$color <- NA
V(countrysideNetwork)$color <- ifelse(V(countrysideNetwork)$race == 1, "burlywood1","tomato")
V(countrysideNetwork)$color <- ifelse(V(countrysideNetwork)$race == 2, "seagreen", V(countrysideNetwork)$color)
plot(countrysideNetwork, layout = fruchtermanLayout, vertex.size = 2, vertex.color = V(countrysideNetwork)$color, vertex.frame.color = NA, vertex.label.cex = .7, vertex.label = NA, edge.curved = .1, edge.arrow.size = .1)
plot(countrysideNetwork, layout = fruchtermanLayout, vertex.size = 2, vertex.color = V(countrysideNetwork)$color, vertex.frame.color = NA, vertex.label.cex = .7, vertex.label = NA, edge.curved = .1, vertex.frame.color = "black", edge.arrow.size = .1)
plot(countrysideNetwork, layout = fruchtermanLayout, vertex.size = 2, vertex.color = V(countrysideNetwork)$color, vertex.label.cex = .7, vertex.label = NA, edge.curved = .1, vertex.frame.color = "black", edge.arrow.size = .1, edge.width = .3)
plot(countrysideNetwork, layout = fruchtermanLayout, vertex.size = 2, vertex.color = V(countrysideNetwork)$color, vertex.label.cex = .7, vertex.label = NA, edge.curved = .1, vertex.frame.color = "black", edge.arrow.size = .1, edge.width = .5, edge.color = "black")
plot(countrysideNetwork, layout = fruchtermanLayout, vertex.size = 2, vertex.color = V(countrysideNetwork)$color, vertex.label.cex = .7, vertex.label = NA, edge.curved = .1, vertex.frame.color = "black", edge.arrow.size = .1, edge.width = .5, edge.color = "grey30")
plot(countrysideNetwork, layout = fruchtermanLayout, vertex.size = 3, vertex.color = V(countrysideNetwork)$color, vertex.label.cex = .7, vertex.label = NA, edge.curved = .1, vertex.frame.color = "black", edge.arrow.size = .1, edge.width = .5, edge.color = "grey30")
countrysideAtts <- read.csv("Data/countrysideAtts.csv", stringsAsFactors = F)
plot(countrysideNetwork, layout = fruchtermanLayout, vertex.size = 3, vertex.color = V(countrysideNetwork)$color, vertex.label.cex = .7, vertex.label = NA, edge.curved = .1, vertex.frame.color = "black", edge.arrow.size = .1, edge.width = .5, edge.color = "grey30")
